DIGEST 3c63f74a6ec0fb12ed5a147970b67f7d
FPoly
R354:358 Lists <> <> lib
ind 905:912 <> boollist
constr 928:935 <> bool_nil
constr 952:960 <> bool_cons
R939:946 Poly <> boollist ind
R968:971 Coq.Init.Logic <> :type_scope:x_'->'_x not
R980:983 Coq.Init.Logic <> :type_scope:x_'->'_x not
R984:991 Poly <> boollist ind
R972:979 Poly <> boollist ind
R964:967 Basics <> bool ind
ind 1478:1481 <> list
constr 1506:1508 <> nil
constr 1523:1526 <> cons
R1512:1515 Poly <> list ind
R1531:1534 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1541:1544 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1545:1548 Poly <> list ind
R1535:1538 Poly <> list ind
R2741:2743 Poly <> nil constr
R2793:2796 Poly <> cons constr
R3204:3207 Poly <> cons constr
R3216:3219 Poly <> cons constr
R3228:3230 Poly <> nil constr
R3232:3234 Coq.Init.Datatypes <> nat ind
R3221:3223 Coq.Init.Datatypes <> nat ind
R3209:3211 Coq.Init.Datatypes <> nat ind
def 3627:3632 <> length
R3646:3649 Poly <> list ind
R3651:3651 Poly <> X var
R3656:3658 Coq.Init.Datatypes <> nat ind
R3671:3671 Poly <> l var
R3682:3684 Poly <> nil constr
R3701:3704 Poly <> cons constr
R3715:3715 Coq.Init.Datatypes <> S constr
R3718:3723 Poly <> length def
R3725:3725 Poly <> X var
def 4262:4273 <> test_length1
R4327:4329 Coq.Init.Logic <> :type_scope:x_'='_x not
R4281:4286 Poly <> length def
R4293:4296 Poly <> cons constr
R4305:4308 Poly <> cons constr
R4317:4319 Poly <> nil constr
R4321:4323 Coq.Init.Datatypes <> nat ind
R4310:4312 Coq.Init.Datatypes <> nat ind
R4298:4300 Coq.Init.Datatypes <> nat ind
R4288:4290 Coq.Init.Datatypes <> nat ind
def 4486:4497 <> test_length2
R4544:4546 Coq.Init.Logic <> :type_scope:x_'='_x not
R4505:4510 Poly <> length def
R4518:4521 Poly <> cons constr
R4534:4536 Poly <> nil constr
R4538:4541 Basics <> bool ind
R4528:4531 Basics <> true constr
R4523:4526 Basics <> bool ind
R4512:4515 Basics <> bool ind
def 4723:4725 <> app
R4747:4750 Poly <> list ind
R4752:4752 Poly <> X var
R4774:4777 Poly <> list ind
R4779:4779 Poly <> X var
R4793:4794 Poly <> l1 var
R4805:4807 Poly <> nil constr
R4819:4820 Poly <> l2 var
R4826:4829 Poly <> cons constr
R4840:4843 Poly <> cons constr
R4850:4852 Poly <> app def
R4858:4859 Poly <> l2 var
R4854:4854 Poly <> X var
R4845:4845 Poly <> X var
def 4879:4882 <> snoc
R4896:4899 Poly <> list ind
R4901:4901 Poly <> X var
R4907:4907 Poly <> X var
R4913:4916 Poly <> list ind
R4918:4918 Poly <> X var
R4932:4932 Poly <> l var
R4943:4945 Poly <> nil constr
R4956:4959 Poly <> cons constr
R4966:4968 Poly <> nil constr
R4970:4970 Poly <> X var
R4963:4963 Poly <> v var
R4961:4961 Poly <> X var
R4977:4980 Poly <> cons constr
R4991:4994 Poly <> cons constr
R5001:5004 Poly <> snoc def
R5010:5010 Poly <> v var
R5006:5006 Poly <> X var
R4996:4996 Poly <> X var
def 5030:5032 <> rev
R5046:5049 Poly <> list ind
R5051:5051 Poly <> X var
R5056:5059 Poly <> list ind
R5061:5061 Poly <> X var
R5074:5074 Poly <> l var
R5085:5087 Poly <> nil constr
R5098:5100 Poly <> nil constr
R5102:5102 Poly <> X var
R5108:5111 Poly <> cons constr
R5122:5125 Poly <> snoc def
R5130:5132 Poly <> rev def
R5134:5134 Poly <> X var
R5127:5127 Poly <> X var
def 5159:5167 <> test_rev1
R5218:5223 Coq.Init.Logic <> :type_scope:x_'='_x not
R5257:5257 Coq.Init.Logic <> :type_scope:x_'='_x not
R5175:5177 Poly <> rev def
R5184:5187 Poly <> cons constr
R5196:5199 Poly <> cons constr
R5208:5210 Poly <> nil constr
R5212:5214 Coq.Init.Datatypes <> nat ind
R5201:5203 Coq.Init.Datatypes <> nat ind
R5189:5191 Coq.Init.Datatypes <> nat ind
R5179:5181 Coq.Init.Datatypes <> nat ind
R5224:5227 Poly <> cons constr
R5236:5239 Poly <> cons constr
R5248:5250 Poly <> nil constr
R5252:5254 Coq.Init.Datatypes <> nat ind
R5241:5243 Coq.Init.Datatypes <> nat ind
R5229:5231 Coq.Init.Datatypes <> nat ind
def 5295:5303 <> test_rev2
R5327:5329 Coq.Init.Logic <> :type_scope:x_'='_x not
R5308:5310 Poly <> rev def
R5318:5320 Poly <> nil constr
R5322:5325 Basics <> bool ind
R5312:5315 Basics <> bool ind
R5330:5332 Poly <> nil constr
R5334:5337 Basics <> bool ind
mod 5374:5382 <> MumbleBaz
ind 5505:5510 MumbleBaz mumble
constr 5526:5526 MumbleBaz a
constr 5541:5541 MumbleBaz b
constr 5573:5573 MumbleBaz c
R5530:5535 Poly <> mumble ind
R5551:5554 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5558:5561 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5562:5567 Poly <> mumble ind
R5555:5557 Coq.Init.Datatypes <> nat ind
R5545:5550 Poly <> mumble ind
R5577:5582 Poly <> mumble ind
ind 5595:5601 MumbleBaz grumble
constr 5626:5626 MumbleBaz d
constr 5654:5654 MumbleBaz e
R5636:5639 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5640:5646 Poly <> grumble ind
R5630:5635 Poly MumbleBaz mumble ind
R5659:5662 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5663:5669 Poly <> grumble ind
ind 6047:6049 MumbleBaz baz
constr 6066:6066 MumbleBaz x
constr 6086:6086 MumbleBaz y
R6073:6076 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6077:6079 Poly <> baz ind
R6070:6072 Poly <> baz ind
R6093:6096 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6101:6104 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6105:6107 Poly <> baz ind
R6097:6100 Basics <> bool ind
R6090:6092 Poly <> baz ind
R6182:6190 Poly MumbleBaz <> mod
def 6453:6456 <> app'
R6468:6471 Poly <> list ind
R6473:6473 Poly <> X var
R6486:6487 Poly <> l1 var
R6498:6500 Poly <> nil constr
R6511:6512 Poly <> l2 var
R6518:6521 Poly <> cons constr
R6532:6535 Poly <> cons constr
R6542:6545 Poly <> app' def
R6551:6552 Poly <> l2 var
R6547:6547 Poly <> X var
R6537:6537 Poly <> X var
R6642:6645 Poly <> app' def
R6709:6711 Poly <> app def
def 9356:9362 <> length'
R9376:9379 Poly <> list ind
R9381:9381 Poly <> X var
R9386:9388 Coq.Init.Datatypes <> nat ind
R9401:9401 Poly <> l var
R9412:9414 Poly <> nil constr
R9431:9434 Poly <> cons constr
R9445:9445 Coq.Init.Datatypes <> S constr
R9448:9454 Poly <> length' def
def 9743:9749 <> list123
R9756:9759 Poly <> cons constr
R9768:9771 Poly <> cons constr
R9780:9783 Poly <> cons constr
R9792:9794 Poly <> nil constr
R9796:9798 Coq.Init.Datatypes <> nat ind
R9785:9787 Coq.Init.Datatypes <> nat ind
R9773:9775 Coq.Init.Datatypes <> nat ind
R9761:9763 Coq.Init.Datatypes <> nat ind
def 9872:9879 <> list123'
R9884:9887 Poly <> cons constr
R9894:9897 Poly <> cons constr
R9904:9907 Poly <> cons constr
R9914:9916 Poly <> nil constr
R10402:10404 Poly <> nil constr
R10402:10404 Poly <> nil constr
R10421:10424 Poly <> cons constr
R10421:10424 Poly <> cons constr
R10506:10511 Poly <> length def
R10506:10511 Poly <> length def
R10530:10532 Poly <> app def
R10530:10532 Poly <> app def
R10555:10557 Poly <> rev def
R10555:10557 Poly <> rev def
R10577:10580 Poly <> snoc def
R10577:10580 Poly <> snoc def
def 10642:10650 <> list123''
R10655:10658 Poly <> cons constr
R10663:10666 Poly <> cons constr
R10671:10674 Poly <> cons constr
R10678:10680 Poly <> nil constr
R10692:10697 Poly <> length def
R10699:10707 Poly <> list123'' def
def 10901:10908 <> length''
R10922:10925 Poly <> list ind
R10927:10927 Poly <> X var
R10932:10934 Coq.Init.Datatypes <> nat ind
R10947:10947 Poly <> l var
R10958:10960 Poly <> nil constr
R10976:10979 Poly <> cons constr
R10988:10988 Coq.Init.Datatypes <> S constr
R10991:10998 Poly <> length'' def
def 12025:12029 <> mynil
R12033:12036 Poly <> list ind
R12038:12040 Coq.Init.Datatypes <> nat ind
R12045:12047 Poly <> nil constr
R12176:12178 Poly <> nil constr
def 12193:12198 <> mynil'
R12204:12206 Poly <> nil constr
R12208:12210 Coq.Init.Datatypes <> nat ind
R12503:12506 Poly <> cons constr
not 12490:12490 <> ::x_'::'_x
R12588:12590 Poly <> nil constr
not 12579:12579 <> ::'['_']'
R12623:12626 Poly <> cons constr
R12634:12637 Poly <> cons constr
R12641:12642 Poly <> ::'['_']' not
not 12602:12602 <> ::'['_x_';'_'..'_';'_x_']'
R12672:12674 Poly <> app def
not 12659:12659 <> ::x_'++'_x
def 12807:12816 <> list123'''
R12821:12821 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12823:12824 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12826:12827 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12829:12829 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 13182:13187 <> repeat
R13205:13205 Poly <> X var
R13217:13219 Coq.Init.Datatypes <> nat ind
R13224:13227 Poly <> list ind
R13229:13229 Poly <> X var
R13242:13246 Poly <> count var
R13257:13257 Coq.Init.Datatypes <> O constr
R13262:13263 Poly <> ::'['_']' not
R13269:13269 Coq.Init.Datatypes <> S constr
R13281:13284 Poly <> ::x_'::'_x not
R13280:13280 Poly <> n var
R13285:13290 Poly <> repeat def
R13294:13298 Poly <> count var
R13292:13292 Poly <> n var
def 13314:13325 <> test_repeat1
R13343:13345 Coq.Init.Logic <> :type_scope:x_'='_x not
R13330:13335 Poly <> repeat def
R13337:13340 Basics <> true constr
R13346:13349 Poly <> cons constr
R13357:13360 Poly <> cons constr
R13367:13369 Poly <> nil constr
R13362:13365 Basics <> true constr
R13351:13354 Basics <> true constr
prf 13414:13420 <> nil_app
R13448:13451 Poly <> list ind
R13453:13453 Poly <> X var
R13466:13468 Coq.Init.Logic <> :type_scope:x_'='_x not
R13458:13460 Poly <> app def
R13465:13465 Poly <> l var
R13462:13463 Poly <> ::'['_']' not
R13469:13469 Poly <> l var
prf 13525:13532 <> rev_snoc
R13585:13585 Poly <> X var
R13620:13623 Poly <> list ind
R13625:13625 Poly <> X var
R13644:13646 Coq.Init.Logic <> :type_scope:x_'='_x not
R13630:13632 Poly <> rev def
R13635:13638 Poly <> snoc def
R13642:13642 Poly <> v var
R13640:13640 Poly <> s var
R13648:13652 Poly <> ::x_'::'_x not
R13658:13658 Poly <> ::x_'::'_x not
R13647:13647 Poly <> v var
R13653:13655 Poly <> rev def
R13657:13657 Poly <> s var
prf 13822:13835 <> rev_involutive
R13867:13870 Poly <> list ind
R13872:13872 Poly <> X var
R13888:13890 Coq.Init.Logic <> :type_scope:x_'='_x not
R13877:13879 Poly <> rev def
R13882:13884 Poly <> rev def
R13886:13886 Poly <> l var
R13891:13891 Poly <> l var
R14012:14019 Poly <> rev_snoc thm
R14012:14019 Poly <> rev_snoc thm
R14012:14019 Poly <> rev_snoc thm
prf 14069:14084 <> snoc_with_append
R14145:14148 Poly <> list ind
R14150:14150 Poly <> X var
R14189:14189 Poly <> X var
R14211:14213 Coq.Init.Logic <> :type_scope:x_'='_x not
R14194:14197 Poly <> snoc def
R14210:14210 Poly <> v var
R14202:14205 Poly <> ::x_'++'_x not
R14200:14201 Poly <> l1 var
R14206:14207 Poly <> l2 var
R14216:14220 Poly <> ::x_'++'_x not
R14230:14230 Poly <> ::x_'++'_x not
R14214:14215 Poly <> l1 var
R14221:14224 Poly <> snoc def
R14229:14229 Poly <> v var
R14226:14227 Poly <> l2 var
ind 14668:14671 <> prod
constr 14698:14701 <> pair
R14706:14709 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14711:14714 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14715:14718 Poly <> prod ind
R14736:14739 Poly <> pair constr
R14736:14739 Poly <> pair constr
R14886:14889 Poly <> pair constr
not 14870:14870 <> ::'('_x_','_x_')'
R15022:15025 Poly <> prod ind
not 15010:15010 <> :type_scope:x_'*'_x
def 15648:15650 <> fst
R15671:15673 Poly <> :type_scope:x_'*'_x not
R15670:15670 Poly <> X var
R15674:15674 Poly <> Y var
R15679:15679 Poly <> X var
R15692:15692 Poly <> p var
R15699:15699 Poly <> ::'('_x_','_x_')' not
R15701:15701 Poly <> ::'('_x_','_x_')' not
R15703:15703 Poly <> ::'('_x_','_x_')' not
def 15727:15729 <> snd
R15750:15752 Poly <> :type_scope:x_'*'_x not
R15749:15749 Poly <> X var
R15753:15753 Poly <> Y var
R15758:15758 Poly <> Y var
R15771:15771 Poly <> p var
R15778:15778 Poly <> ::'('_x_','_x_')' not
R15780:15780 Poly <> ::'('_x_','_x_')' not
R15782:15782 Poly <> ::'('_x_','_x_')' not
def 16123:16129 <> combine
R16150:16153 Poly <> list ind
R16155:16155 Poly <> X var
R16164:16167 Poly <> list ind
R16169:16169 Poly <> Y var
R16185:16188 Poly <> list ind
R16192:16192 Poly <> :type_scope:x_'*'_x not
R16191:16191 Poly <> X var
R16193:16193 Poly <> Y var
R16207:16207 Poly <> ::'('_x_','_x_')' not
R16210:16210 Poly <> ::'('_x_','_x_')' not
R16213:16213 Poly <> ::'('_x_','_x_')' not
R16208:16209 Poly <> lx var
R16211:16212 Poly <> ly var
R16224:16224 Poly <> ::'('_x_','_x_')' not
R16227:16227 Poly <> ::'('_x_','_x_')' not
R16229:16229 Poly <> ::'('_x_','_x_')' not
R16225:16226 Poly <> ::'['_']' not
R16234:16235 Poly <> ::'['_']' not
R16241:16241 Poly <> ::'('_x_','_x_')' not
R16243:16243 Poly <> ::'('_x_','_x_')' not
R16246:16246 Poly <> ::'('_x_','_x_')' not
R16244:16245 Poly <> ::'['_']' not
R16251:16252 Poly <> ::'['_']' not
R16258:16258 Poly <> ::'('_x_','_x_')' not
R16264:16265 Poly <> ::'('_x_','_x_')' not
R16271:16271 Poly <> ::'('_x_','_x_')' not
R16260:16261 Poly <> ::x_'::'_x not
R16267:16268 Poly <> ::x_'::'_x not
R16281:16285 Poly <> ::x_'::'_x not
R16299:16299 Poly <> ::x_'::'_x not
R16276:16276 Poly <> ::'('_x_','_x_')' not
R16278:16278 Poly <> ::'('_x_','_x_')' not
R16280:16280 Poly <> ::'('_x_','_x_')' not
R16286:16292 Poly <> combine def
def 17009:17013 <> split
R17044:17047 Poly <> list ind
R17051:17051 Poly <> :type_scope:x_'*'_x not
R17050:17050 Poly <> X var
R17052:17052 Poly <> Y var
R17069:17069 Poly <> :type_scope:x_'*'_x not
R17076:17080 Poly <> :type_scope:x_'*'_x not
R17087:17087 Poly <> :type_scope:x_'*'_x not
R17070:17073 Poly <> list ind
R17075:17075 Poly <> X var
R17081:17084 Poly <> list ind
R17086:17086 Poly <> Y var
R17098:17098 Poly <> l var
R17107:17109 Poly <> nil constr
R17114:17114 Poly <> ::'('_x_','_x_')' not
R17118:17119 Poly <> ::'('_x_','_x_')' not
R17123:17123 Poly <> ::'('_x_','_x_')' not
R17115:17117 Poly <> nil constr
R17120:17122 Poly <> nil constr
R17133:17136 Poly <> ::x_'::'_x not
R17127:17127 Poly <> ::'('_x_','_x_')' not
R17129:17130 Poly <> ::'('_x_','_x_')' not
R17132:17132 Poly <> ::'('_x_','_x_')' not
R17142:17142 Poly <> ::'('_x_','_x_')' not
R17161:17162 Poly <> ::'('_x_','_x_')' not
R17181:17181 Poly <> ::'('_x_','_x_')' not
R17144:17147 Poly <> ::x_'::'_x not
R17148:17150 Poly <> fst def
R17153:17157 Poly <> split def
R17164:17167 Poly <> ::x_'::'_x not
R17168:17170 Poly <> snd def
R17173:17177 Poly <> split def
def 17197:17206 <> test_split
R17238:17240 Coq.Init.Logic <> :type_scope:x_'='_x not
R17211:17215 Poly <> split def
R17217:17217 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17227:17227 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17237:17237 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17228:17228 Poly <> ::'('_x_','_x_')' not
R17230:17230 Poly <> ::'('_x_','_x_')' not
R17236:17236 Poly <> ::'('_x_','_x_')' not
R17231:17235 Basics <> false constr
R17218:17218 Poly <> ::'('_x_','_x_')' not
R17220:17220 Poly <> ::'('_x_','_x_')' not
R17226:17226 Poly <> ::'('_x_','_x_')' not
R17221:17225 Basics <> false constr
R17241:17241 Poly <> ::'('_x_','_x_')' not
R17247:17247 Poly <> ::'('_x_','_x_')' not
R17261:17261 Poly <> ::'('_x_','_x_')' not
R17242:17242 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17244:17244 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17246:17246 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17248:17248 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17254:17254 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17260:17260 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17255:17259 Basics <> false constr
R17249:17253 Basics <> false constr
ind 17565:17570 <> option
constr 17595:17598 <> Some
constr 17620:17623 <> None
R17603:17606 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17607:17612 Poly <> option ind
R17627:17632 Poly <> option ind
R17648:17651 Poly <> Some constr
R17648:17651 Poly <> Some constr
R17671:17674 Poly <> None constr
R17671:17674 Poly <> None constr
def 17796:17800 <> index
R17818:17820 Coq.Init.Datatypes <> nat ind
R17843:17846 Poly <> list ind
R17848:17848 Poly <> X var
R17853:17858 Poly <> option ind
R17860:17860 Poly <> X var
R17873:17873 Poly <> l var
R17884:17885 Poly <> ::'['_']' not
R17890:17893 Poly <> None constr
R17900:17903 Poly <> ::x_'::'_x not
R17913:17919 Basics <> beq_nat def
R17923:17923 Coq.Init.Datatypes <> O constr
R17921:17921 Poly <> n var
R17942:17946 Poly <> index def
R17949:17952 Coq.Init.Peano <> pred syndef
R17954:17954 Poly <> n var
R17930:17933 Poly <> Some constr
def 17976:17986 <> test_index1
R18010:18013 Coq.Init.Logic <> :type_scope:x_'='_x not
R17993:17997 Poly <> index def
R18001:18001 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18003:18003 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18005:18005 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18007:18007 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18009:18009 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18014:18017 Poly <> Some constr
def 18056:18066 <> test_index2
R18091:18094 Coq.Init.Logic <> :type_scope:x_'='_x not
R18073:18077 Poly <> index def
R18082:18082 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18086:18086 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18090:18090 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18087:18087 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18089:18089 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18083:18083 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18085:18085 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18095:18098 Poly <> Some constr
R18100:18100 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18102:18102 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 18139:18149 <> test_index3
R18171:18174 Coq.Init.Logic <> :type_scope:x_'='_x not
R18156:18160 Poly <> index def
R18165:18165 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18170:18170 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18166:18169 Basics <> true constr
R18175:18178 Poly <> None constr
def 18431:18436 <> hd_opt
R18454:18457 Poly <> list ind
R18459:18459 Poly <> X var
R18465:18470 Poly <> option ind
R18472:18472 Poly <> X var
R18485:18485 Poly <> l var
R18496:18497 Poly <> ::'['_']' not
R18502:18505 Poly <> None constr
R18512:18515 Poly <> ::x_'::'_x not
R18521:18524 Poly <> Some constr
R18661:18666 Poly <> hd_opt def
def 18678:18689 <> test_hd_opt1
R18706:18708 Coq.Init.Logic <> :type_scope:x_'='_x not
R18694:18699 Poly <> hd_opt def
R18701:18701 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18703:18703 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18705:18705 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18709:18712 Poly <> Some constr
def 18757:18768 <> test_hd_opt2
R18791:18794 Coq.Init.Logic <> :type_scope:x_'='_x not
R18774:18779 Poly <> hd_opt def
R18782:18782 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18786:18786 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18790:18790 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18787:18787 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18789:18789 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18783:18783 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18785:18785 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18795:18798 Poly <> Some constr
R18800:18800 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18802:18802 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 19462:19471 <> doit3times
R19486:19487 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19488:19488 Poly <> X var
R19485:19485 Poly <> X var
R19494:19494 Poly <> X var
R19499:19499 Poly <> X var
R19506:19506 Poly <> f var
R19509:19509 Poly <> f var
R19512:19512 Poly <> f var
R19514:19514 Poly <> n var
R19673:19682 Poly <> doit3times def
def 19754:19768 <> test_doit3times
R19792:19794 Coq.Init.Logic <> :type_scope:x_'='_x not
R19771:19780 Poly <> doit3times def
R19782:19789 Basics <> minustwo def
def 19833:19848 <> test_doit3times'
R19871:19873 Coq.Init.Logic <> :type_scope:x_'='_x not
R19851:19860 Poly <> doit3times def
R19867:19870 Basics <> true constr
R19862:19865 Basics <> negb def
R19874:19878 Basics <> false constr
R20172:20175 Coq.Init.Peano <> plus syndef
def 20897:20901 <> plus3
R20906:20909 Coq.Init.Peano <> plus syndef
R20920:20924 Poly <> plus3 def
def 20936:20945 <> test_plus3
R20959:20961 Coq.Init.Logic <> :type_scope:x_'='_x not
R20952:20956 Poly <> plus3 def
def 20999:21009 <> test_plus3'
R21033:21035 Coq.Init.Logic <> :type_scope:x_'='_x not
R21015:21024 Poly <> doit3times def
R21026:21030 Poly <> plus3 def
def 21073:21084 <> test_plus3''
R21110:21112 Coq.Init.Logic <> :type_scope:x_'='_x not
R21089:21098 Poly <> doit3times def
R21101:21104 Coq.Init.Peano <> plus syndef
def 22037:22046 <> prod_curry
R22075:22078 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22079:22079 Poly <> Z var
R22071:22073 Poly <> :type_scope:x_'*'_x not
R22070:22070 Poly <> X var
R22074:22074 Poly <> Y var
R22087:22087 Poly <> X var
R22095:22095 Poly <> Y var
R22100:22100 Poly <> Z var
R22105:22105 Poly <> f var
R22107:22107 Poly <> ::'('_x_','_x_')' not
R22109:22110 Poly <> ::'('_x_','_x_')' not
R22112:22112 Poly <> ::'('_x_','_x_')' not
R22108:22108 Poly <> x var
R22111:22111 Poly <> y var
def 22257:22268 <> prod_uncurry
R22293:22296 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22298:22301 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22302:22302 Poly <> Z var
R22297:22297 Poly <> Y var
R22292:22292 Poly <> X var
R22311:22313 Poly <> :type_scope:x_'*'_x not
R22310:22310 Poly <> X var
R22314:22314 Poly <> Y var
R22319:22319 Poly <> Z var
R22324:22324 Poly <> f var
R22335:22337 Poly <> snd def
R22339:22339 Poly <> p var
R22327:22329 Poly <> fst def
R22331:22331 Poly <> p var
R22481:22490 Poly <> prod_curry def
R22500:22511 Poly <> prod_uncurry def
prf 22523:22535 <> uncurry_curry
R22567:22570 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22572:22575 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22576:22576 Poly <> Z var
R22571:22571 Poly <> Y var
R22566:22566 Poly <> X var
R22617:22619 Coq.Init.Logic <> :type_scope:x_'='_x not
R22586:22595 Poly <> prod_curry def
R22616:22616 Poly <> y var
R22614:22614 Poly <> x var
R22598:22609 Poly <> prod_uncurry def
R22611:22611 Poly <> f var
R22620:22620 Poly <> f var
R22624:22624 Poly <> y var
R22622:22622 Poly <> x var
prf 22663:22675 <> curry_uncurry
R22737:22737 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22743:22747 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22748:22748 Poly <> Z var
R22739:22741 Poly <> :type_scope:x_'*'_x not
R22738:22738 Poly <> X var
R22742:22742 Poly <> Y var
R22757:22759 Poly <> :type_scope:x_'*'_x not
R22756:22756 Poly <> X var
R22760:22760 Poly <> Y var
R22795:22797 Coq.Init.Logic <> :type_scope:x_'='_x not
R22766:22777 Poly <> prod_uncurry def
R22794:22794 Poly <> p var
R22780:22789 Poly <> prod_curry def
R22791:22791 Poly <> f var
R22798:22798 Poly <> f var
R22800:22800 Poly <> p var
def 23219:23224 <> filter
R23243:23244 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23245:23248 Basics <> bool ind
R23242:23242 Poly <> X var
R23254:23257 Poly <> list ind
R23259:23259 Poly <> X var
R23281:23284 Poly <> list ind
R23286:23286 Poly <> X var
R23300:23300 Poly <> l var
R23311:23312 Poly <> ::'['_']' not
R23321:23322 Poly <> ::'['_']' not
R23329:23332 Poly <> ::x_'::'_x not
R23341:23344 Poly <> test var
R23409:23414 Poly <> filter def
R23416:23419 Poly <> test var
R23354:23358 Poly <> ::x_'::'_x not
R23372:23372 Poly <> ::x_'::'_x not
R23359:23364 Poly <> filter def
R23366:23369 Poly <> test var
def 23600:23611 <> test_filter1
R23636:23638 Coq.Init.Logic <> :type_scope:x_'='_x not
R23614:23619 Poly <> filter def
R23627:23627 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23629:23629 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23631:23631 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23633:23633 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23635:23635 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23621:23625 Basics <> evenb def
R23639:23639 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23641:23641 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23643:23643 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23695:23705 <> length_is_1
R23723:23726 Poly <> list ind
R23728:23728 Poly <> X var
R23733:23736 Basics <> bool ind
R23743:23749 Basics <> beq_nat def
R23752:23757 Poly <> length def
R23759:23759 Poly <> l var
def 23774:23785 <> test_filter2
R23860:23864 Coq.Init.Logic <> :type_scope:x_'='_x not
R23792:23797 Poly <> filter def
R23822:23823 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23830:23831 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23835:23836 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23840:23841 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23849:23850 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23853:23854 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23858:23859 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23855:23855 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23857:23857 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23851:23852 Poly <> ::'['_']' not
R23842:23842 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23844:23844 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23846:23846 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23848:23848 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23837:23837 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23839:23839 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23832:23832 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23834:23834 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23824:23824 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23826:23827 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23829:23829 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23799:23809 Poly <> length_is_1 def
R23865:23866 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23870:23871 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23875:23876 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23880:23881 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23877:23877 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23879:23879 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23872:23872 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23874:23874 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23867:23867 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23869:23869 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24052:24067 <> countoddmembers'
R24072:24075 Poly <> list ind
R24077:24079 Coq.Init.Datatypes <> nat ind
R24084:24086 Coq.Init.Datatypes <> nat ind
R24093:24098 Poly <> length def
R24101:24106 Poly <> filter def
R24113:24113 Poly <> l var
R24108:24111 Basics <> oddb def
def 24126:24147 <> test_countoddmembers'1
R24182:24184 Coq.Init.Logic <> :type_scope:x_'='_x not
R24152:24167 Poly <> countoddmembers' def
R24169:24169 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24171:24171 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24173:24173 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24175:24175 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24177:24177 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24179:24179 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24181:24181 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24222:24243 <> test_countoddmembers'2
R24272:24274 Coq.Init.Logic <> :type_scope:x_'='_x not
R24248:24263 Poly <> countoddmembers' def
R24265:24265 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24267:24267 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24269:24269 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24271:24271 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24312:24333 <> test_countoddmembers'3
R24358:24360 Coq.Init.Logic <> :type_scope:x_'='_x not
R24338:24353 Poly <> countoddmembers' def
R24355:24357 Poly <> nil constr
def 25227:25240 <> test_anon_fun'
R25274:25276 Coq.Init.Logic <> :type_scope:x_'='_x not
R25245:25254 Poly <> doit3times def
R25267:25269 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25266:25266 Poly <> n var
R25270:25270 Poly <> n var
def 25413:25425 <> test_filter2'
R25520:25524 Coq.Init.Logic <> :type_scope:x_'='_x not
R25432:25437 Poly <> filter def
R25482:25483 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25490:25491 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25495:25496 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25500:25501 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25509:25510 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25513:25514 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25518:25519 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25515:25515 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25517:25517 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25511:25512 Poly <> ::'['_']' not
R25502:25502 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25504:25504 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25506:25506 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25508:25508 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25497:25497 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25499:25499 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25492:25492 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25494:25494 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25484:25484 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25486:25487 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25489:25489 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25449:25455 Basics <> beq_nat def
R25458:25463 Poly <> length def
R25465:25465 Poly <> l var
R25525:25526 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25530:25531 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25535:25536 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25540:25541 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25537:25537 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25539:25539 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25532:25532 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25534:25534 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25527:25527 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25529:25529 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25844:25858 <> filter_even_gt7
R25865:25868 Poly <> list ind
R25870:25872 Coq.Init.Datatypes <> nat ind
R25877:25880 Poly <> list ind
R25882:25884 Coq.Init.Datatypes <> nat ind
R25891:25896 Poly <> filter def
R25948:25948 Poly <> l var
R25910:25913 Basics <> andb def
R25937:25941 Basics <> evenb def
R25943:25943 Poly <> a var
R25916:25919 Basics <> negb def
R25922:25928 Basics <> ble_nat def
R25930:25930 Poly <> a var
def 25960:25981 <> test_filter_even_gt7_1
R26022:26024 Coq.Init.Logic <> :type_scope:x_'='_x not
R25987:26001 Poly <> filter_even_gt7 def
R26003:26003 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26005:26005 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26007:26007 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26009:26009 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26011:26011 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26014:26014 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26016:26016 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26019:26019 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26021:26021 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26025:26025 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26028:26028 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26031:26031 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26033:26033 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26070:26091 <> test_filter_even_gt7_2
R26127:26129 Coq.Init.Logic <> :type_scope:x_'='_x not
R26097:26111 Poly <> filter_even_gt7 def
R26113:26113 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26115:26115 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26117:26117 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26119:26119 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26122:26122 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26126:26126 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26130:26131 Poly <> ::'['_']' not
def 26780:26788 <> partition
R26810:26813 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26814:26817 Basics <> bool ind
R26809:26809 Poly <> X var
R26825:26828 Poly <> list ind
R26830:26830 Poly <> X var
R26862:26864 Poly <> :type_scope:x_'*'_x not
R26856:26859 Poly <> list ind
R26861:26861 Poly <> X var
R26865:26868 Poly <> list ind
R26870:26870 Poly <> X var
R26877:26877 Poly <> ::'('_x_','_x_')' not
R26891:26892 Poly <> ::'('_x_','_x_')' not
R26926:26926 Poly <> ::'('_x_','_x_')' not
R26878:26883 Poly <> filter def
R26890:26890 Poly <> l var
R26885:26888 Poly <> test var
R26893:26898 Poly <> filter def
R26925:26925 Poly <> l var
R26910:26913 Basics <> negb def
R26916:26919 Poly <> test var
R26921:26921 Poly <> p var
def 26938:26952 <> test_partition1
R26981:26983 Coq.Init.Logic <> :type_scope:x_'='_x not
R26955:26963 Poly <> partition def
R26970:26970 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26972:26972 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26974:26974 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26976:26976 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26978:26978 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26980:26980 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26965:26968 Basics <> oddb def
R26984:26984 Poly <> ::'('_x_','_x_')' not
R26992:26993 Poly <> ::'('_x_','_x_')' not
R26999:26999 Poly <> ::'('_x_','_x_')' not
R26985:26985 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26987:26987 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26989:26989 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26991:26991 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26994:26994 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26996:26996 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26998:26998 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27035:27049 <> test_partition2
R27086:27088 Coq.Init.Logic <> :type_scope:x_'='_x not
R27052:27060 Poly <> partition def
R27079:27079 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27081:27081 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27083:27083 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27085:27085 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27072:27076 Basics <> false constr
R27089:27089 Poly <> ::'('_x_','_x_')' not
R27092:27093 Poly <> ::'('_x_','_x_')' not
R27101:27101 Poly <> ::'('_x_','_x_')' not
R27090:27091 Poly <> ::'['_']' not
R27094:27094 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27096:27096 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27098:27098 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27100:27100 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27286:27288 <> map
R27305:27306 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27307:27307 Poly <> Y var
R27304:27304 Poly <> X var
R27313:27316 Poly <> list ind
R27318:27318 Poly <> X var
R27337:27340 Poly <> list ind
R27342:27342 Poly <> Y var
R27356:27356 Poly <> l var
R27367:27368 Poly <> ::'['_']' not
R27377:27378 Poly <> ::'['_']' not
R27385:27388 Poly <> ::x_'::'_x not
R27394:27394 Poly <> ::x_'::'_x not
R27398:27403 Poly <> ::x_'::'_x not
R27411:27411 Poly <> ::x_'::'_x not
R27395:27395 Poly <> f var
R27404:27406 Poly <> map def
R27408:27408 Poly <> f var
def 27639:27647 <> test_map1
R27670:27672 Coq.Init.Logic <> :type_scope:x_'='_x not
R27650:27652 Poly <> map def
R27663:27663 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27665:27665 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27667:27667 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27669:27669 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27655:27658 Coq.Init.Peano <> plus syndef
R27673:27673 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27675:27675 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27677:27677 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27679:27679 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27988:27996 <> test_map2
R28017:28019 Coq.Init.Logic <> :type_scope:x_'='_x not
R27999:28001 Poly <> map def
R28008:28008 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28010:28010 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28012:28012 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28014:28014 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28016:28016 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28003:28006 Basics <> oddb def
R28020:28020 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28026:28026 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28031:28031 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28037:28037 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28042:28042 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28038:28041 Basics <> true constr
R28032:28036 Basics <> false constr
R28027:28030 Basics <> true constr
R28021:28025 Basics <> false constr
def 28229:28237 <> test_map3
R28285:28289 Coq.Init.Logic <> :type_scope:x_'='_x not
R28244:28246 Poly <> map def
R28276:28276 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28278:28278 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28280:28280 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28282:28282 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28284:28284 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28258:28258 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28266:28266 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28273:28273 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28267:28270 Basics <> oddb def
R28272:28272 Poly <> n var
R28259:28263 Basics <> evenb def
R28265:28265 Poly <> n var
R28290:28290 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28303:28303 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28316:28316 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28329:28329 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28342:28342 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28330:28330 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28336:28336 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28341:28341 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28337:28340 Basics <> true constr
R28331:28335 Basics <> false constr
R28317:28317 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28322:28322 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28328:28328 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28323:28327 Basics <> false constr
R28318:28321 Basics <> true constr
R28304:28304 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28310:28310 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28315:28315 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28311:28314 Basics <> true constr
R28305:28309 Basics <> false constr
R28291:28291 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28296:28296 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28302:28302 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28297:28301 Basics <> false constr
R28292:28295 Basics <> true constr
prf 28538:28545 <> snoc_rev
R28575:28578 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28579:28579 Poly <> Y var
R28574:28574 Poly <> X var
R28587:28590 Poly <> list ind
R28592:28592 Poly <> X var
R28600:28600 Poly <> X var
R28622:28624 Coq.Init.Logic <> :type_scope:x_'='_x not
R28606:28608 Poly <> map def
R28613:28616 Poly <> snoc def
R28620:28620 Poly <> n var
R28618:28618 Poly <> l var
R28610:28610 Poly <> f var
R28625:28628 Poly <> snoc def
R28641:28641 Poly <> f var
R28643:28643 Poly <> n var
R28631:28633 Poly <> map def
R28637:28637 Poly <> l var
R28635:28635 Poly <> f var
prf 28806:28812 <> map_rev
R28842:28845 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28846:28846 Poly <> Y var
R28841:28841 Poly <> X var
R28854:28857 Poly <> list ind
R28859:28859 Poly <> X var
R28878:28880 Coq.Init.Logic <> :type_scope:x_'='_x not
R28865:28867 Poly <> map def
R28872:28874 Poly <> rev def
R28876:28876 Poly <> l var
R28869:28869 Poly <> f var
R28881:28883 Poly <> rev def
R28886:28888 Poly <> map def
R28892:28892 Poly <> l var
R28890:28890 Poly <> f var
R29016:29023 Poly <> snoc_rev thm
R29016:29023 Poly <> snoc_rev thm
R29016:29023 Poly <> snoc_rev thm
def 29524:29531 <> flat_map
R29548:29551 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29552:29555 Poly <> list ind
R29557:29557 Poly <> Y var
R29547:29547 Poly <> X var
R29563:29566 Poly <> list ind
R29568:29568 Poly <> X var
R29593:29596 Poly <> list ind
R29598:29598 Poly <> Y var
R29612:29612 Poly <> l var
R29623:29625 Poly <> nil constr
R29630:29631 Poly <> ::'['_']' not
R29638:29641 Poly <> ::x_'::'_x not
R29650:29653 Poly <> ::x_'++'_x not
R29647:29647 Poly <> f var
R29654:29661 Poly <> flat_map def
R29663:29663 Poly <> f var
def 29681:29694 <> test_flat_map1
R29734:29738 Coq.Init.Logic <> :type_scope:x_'='_x not
R29699:29706 Poly <> flat_map def
R29727:29727 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29729:29729 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29731:29731 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29733:29733 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29718:29718 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29720:29720 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29722:29722 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29724:29724 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29723:29723 Poly <> n var
R29721:29721 Poly <> n var
R29719:29719 Poly <> n var
R29739:29739 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29741:29742 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29744:29745 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29747:29748 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29750:29751 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29753:29754 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29756:29757 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29759:29760 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29762:29763 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29765:29765 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 29972:29981 <> option_map
R30002:30005 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30006:30006 Poly <> Y var
R30001:30001 Poly <> X var
R30015:30020 Poly <> option ind
R30022:30022 Poly <> X var
R30049:30054 Poly <> option ind
R30056:30056 Poly <> Y var
R30069:30070 Poly <> xo var
R30083:30086 Poly <> None constr
R30091:30094 Poly <> None constr
R30102:30105 Poly <> Some constr
R30112:30115 Poly <> Some constr
R30118:30118 Poly <> f var
def 30940:30943 <> fold
R30961:30962 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30964:30965 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30966:30966 Poly <> Y var
R30963:30963 Poly <> Y var
R30960:30960 Poly <> X var
R30972:30975 Poly <> list ind
R30977:30977 Poly <> X var
R30983:30983 Poly <> Y var
R30988:30988 Poly <> Y var
R31001:31001 Poly <> l var
R31012:31014 Poly <> nil constr
R31019:31019 Poly <> b var
R31026:31029 Poly <> ::x_'::'_x not
R31035:31035 Poly <> f var
R31040:31043 Poly <> fold def
R31049:31049 Poly <> b var
R31045:31045 Poly <> f var
R31533:31536 Poly <> fold def
R31538:31541 Basics <> andb def
def 31603:31615 <> fold_example1
R31640:31642 Coq.Init.Logic <> :type_scope:x_'='_x not
R31619:31622 Poly <> fold def
R31629:31629 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31631:31631 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31633:31633 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31635:31635 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31637:31637 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31624:31627 Coq.Init.Peano <> mult syndef
def 31681:31693 <> fold_example2
R31734:31736 Coq.Init.Logic <> :type_scope:x_'='_x not
R31697:31700 Poly <> fold def
R31730:31733 Basics <> true constr
R31707:31707 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31712:31712 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31717:31717 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31723:31723 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31728:31728 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31724:31727 Basics <> true constr
R31718:31722 Basics <> false constr
R31713:31716 Basics <> true constr
R31708:31711 Basics <> true constr
R31702:31705 Basics <> andb def
R31737:31741 Basics <> false constr
def 31778:31790 <> fold_example3
R31825:31827 Coq.Init.Logic <> :type_scope:x_'='_x not
R31794:31797 Poly <> fold def
R31823:31824 Poly <> ::'['_']' not
R31804:31804 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31808:31808 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31811:31811 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31817:31817 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31821:31821 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31818:31818 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31820:31820 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31812:31812 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31814:31814 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31816:31816 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31809:31810 Poly <> ::'['_']' not
R31805:31805 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31807:31807 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31799:31801 Poly <> app def
R31828:31828 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31830:31830 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31832:31832 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31834:31834 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31836:31836 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 32906:32913 <> constfun
R32929:32929 Poly <> X var
R32937:32938 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32939:32939 Poly <> X var
R32934:32936 Coq.Init.Datatypes <> nat ind
R32953:32955 Coq.Init.Datatypes <> nat ind
R32961:32961 Poly <> x var
def 32976:32980 <> ftrue
R32985:32992 Poly <> constfun def
R32994:32997 Basics <> true constr
def 33009:33025 <> constfun_example1
R33036:33038 Coq.Init.Logic <> :type_scope:x_'='_x not
R33029:33033 Poly <> ftrue def
R33039:33042 Basics <> true constr
def 33079:33095 <> constfun_example2
R33114:33116 Coq.Init.Logic <> :type_scope:x_'='_x not
R33100:33107 Poly <> constfun def
def 33460:33467 <> override
R33486:33487 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33488:33488 Poly <> X var
R33483:33485 Coq.Init.Datatypes <> nat ind
R33494:33496 Coq.Init.Datatypes <> nat ind
R33502:33502 Poly <> X var
R33510:33511 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33512:33512 Poly <> X var
R33507:33509 Coq.Init.Datatypes <> nat ind
R33526:33528 Coq.Init.Datatypes <> nat ind
R33537:33543 Basics <> beq_nat def
R33547:33548 Poly <> k' var
R33545:33545 Poly <> k var
R33562:33562 Poly <> f var
R33564:33565 Poly <> k' var
R33555:33555 Poly <> x var
def 33764:33774 <> fmostlytrue
R33779:33786 Poly <> override def
R33815:33819 Basics <> false constr
R33789:33796 Poly <> override def
R33806:33810 Basics <> false constr
R33798:33802 Poly <> ftrue def
def 33843:33859 <> override_example1
R33876:33878 Coq.Init.Logic <> :type_scope:x_'='_x not
R33863:33873 Poly <> fmostlytrue def
R33879:33882 Basics <> true constr
def 33919:33935 <> override_example2
R33952:33954 Coq.Init.Logic <> :type_scope:x_'='_x not
R33939:33949 Poly <> fmostlytrue def
R33955:33959 Basics <> false constr
def 33996:34012 <> override_example3
R34029:34031 Coq.Init.Logic <> :type_scope:x_'='_x not
R34016:34026 Poly <> fmostlytrue def
R34032:34035 Basics <> true constr
def 34072:34088 <> override_example4
R34105:34107 Coq.Init.Logic <> :type_scope:x_'='_x not
R34092:34102 Poly <> fmostlytrue def
R34108:34112 Basics <> false constr
prf 34413:34428 <> override_example
R34442:34445 Basics <> bool ind
R34483:34485 Coq.Init.Logic <> :type_scope:x_'='_x not
R34452:34459 Poly <> override def
R34476:34479 Basics <> true constr
R34462:34469 Poly <> constfun def
R34471:34471 Poly <> b var
R34486:34486 Poly <> b var
prf 35535:35552 <> unfold_example_bad
R35579:35584 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35596:35598 Coq.Init.Logic <> :type_scope:x_'='_x not
R35592:35594 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35585:35589 Poly <> plus3 def
R35591:35591 Poly <> n var
R35600:35602 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35599:35599 Poly <> m var
R35575:35577 Coq.Init.Logic <> :type_scope:x_'='_x not
R35571:35573 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35574:35574 Poly <> n var
R35578:35578 Poly <> m var
prf 35966:35979 <> unfold_example
R36006:36011 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36023:36025 Coq.Init.Logic <> :type_scope:x_'='_x not
R36019:36021 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R36012:36016 Poly <> plus3 def
R36018:36018 Poly <> n var
R36027:36029 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R36026:36026 Poly <> m var
R36002:36004 Coq.Init.Logic <> :type_scope:x_'='_x not
R35998:36000 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R36001:36001 Poly <> n var
R36005:36005 Poly <> m var
R36065:36069 Poly <> plus3 def
prf 36286:36296 <> override_eq
R36326:36327 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36328:36328 Poly <> X var
R36323:36325 Coq.Init.Datatypes <> nat ind
R36352:36354 Coq.Init.Logic <> :type_scope:x_'='_x not
R36335:36342 Poly <> override def
R36348:36348 Poly <> x var
R36346:36346 Poly <> k var
R36344:36344 Poly <> f var
R36351:36351 Poly <> k var
R36355:36355 Poly <> x var
R36392:36399 Poly <> override def
R36415:36426 Induction <> beq_nat_refl thm
R36415:36426 Induction <> beq_nat_refl thm
R36415:36426 Induction <> beq_nat_refl thm
prf 36624:36635 <> override_neq
R36675:36676 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36677:36677 Poly <> X var
R36672:36674 Coq.Init.Datatypes <> nat ind
R36692:36697 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36719:36724 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36746:36748 Coq.Init.Logic <> :type_scope:x_'='_x not
R36726:36733 Poly <> override def
R36740:36741 Poly <> x2 var
R36737:36738 Poly <> k2 var
R36735:36735 Poly <> f var
R36744:36745 Poly <> k1 var
R36749:36750 Poly <> x1 var
R36711:36713 Coq.Init.Logic <> :type_scope:x_'='_x not
R36698:36704 Basics <> beq_nat def
R36709:36710 Poly <> k1 var
R36706:36707 Poly <> k2 var
R36714:36718 Basics <> false constr
R36687:36689 Coq.Init.Logic <> :type_scope:x_'='_x not
R36683:36683 Poly <> f var
R36685:36686 Poly <> k1 var
R36690:36691 Poly <> x1 var
R36799:36806 Poly <> override def
def 37313:37323 <> fold_length
R37341:37344 Poly <> list ind
R37346:37346 Poly <> X var
R37351:37353 Coq.Init.Datatypes <> nat ind
R37360:37363 Poly <> fold def
R37382:37382 Poly <> l var
R37377:37377 Coq.Init.Datatypes <> S constr
R37379:37379 Poly <> n var
def 37396:37412 <> test_fold_length1
R37435:37437 Coq.Init.Logic <> :type_scope:x_'='_x not
R37416:37426 Poly <> fold_length def
R37428:37428 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37430:37430 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37432:37432 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37434:37434 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 37523:37541 <> fold_length_correct
R37559:37562 Poly <> list ind
R37564:37564 Poly <> X var
R37583:37585 Coq.Init.Logic <> :type_scope:x_'='_x not
R37570:37580 Poly <> fold_length def
R37582:37582 Poly <> l var
R37586:37591 Poly <> length def
R37593:37593 Poly <> l var
R37724:37734 Poly <> fold_length def
def 37911:37918 <> fold_map
R37937:37940 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37941:37941 Poly <> Y var
R37936:37936 Poly <> X var
R37949:37952 Poly <> list ind
R37954:37954 Poly <> X var
R37959:37962 Poly <> list ind
R37964:37964 Poly <> Y var
R37971:37974 Poly <> fold def
R38002:38003 Poly <> ::'['_']' not
R38000:38000 Poly <> l var
R37988:37988 Poly <> ::x_'::'_x not
R37992:37996 Poly <> ::x_'::'_x not
R37989:37989 Poly <> f var
R37991:37991 Poly <> a var
R37997:37997 Poly <> b var
prf 38123:38138 <> fold_map_correct
R38168:38171 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38172:38172 Poly <> Y var
R38167:38167 Poly <> X var
R38178:38181 Poly <> list ind
R38183:38183 Poly <> X var
R38201:38203 Coq.Init.Logic <> :type_scope:x_'='_x not
R38189:38196 Poly <> fold_map def
R38200:38200 Poly <> l var
R38198:38198 Poly <> f var
R38204:38206 Poly <> map def
R38210:38210 Poly <> l var
R38208:38208 Poly <> f var
mod 38859:38864 <> Church
def 39209:39211 Church nat
R39233:39233 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39240:39244 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39246:39249 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39250:39250 Poly <> X var
R39245:39245 Poly <> X var
R39235:39238 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39239:39239 Poly <> X var
R39234:39234 Poly <> X var
def 39388:39390 Church one
R39394:39396 Poly Church nat def
R39425:39428 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39429:39429 Poly <> X var
R39424:39424 Poly <> X var
R39437:39437 Poly <> X var
R39443:39443 Poly <> f var
R39445:39445 Poly <> x var
def 39514:39516 Church two
R39520:39522 Poly Church nat def
R39550:39553 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39554:39554 Poly <> X var
R39549:39549 Poly <> X var
R39562:39562 Poly <> X var
R39568:39568 Poly <> f var
R39571:39571 Poly <> f var
R39573:39573 Poly <> x var
def 39727:39730 Church zero
R39734:39736 Poly Church nat def
R39764:39767 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39768:39768 Poly <> X var
R39763:39763 Poly <> X var
R39776:39776 Poly <> X var
R39782:39782 Poly <> x var
def 40050:40054 Church three
R40058:40060 Poly Church nat def
R40066:40075 Poly Church doit3times def
R41873:41878 Poly Church <> mod
